import numpy as np
from sklearn.tree import DecisionTreeClassifier
from sklearn import tree
import matplotlib.pyplot as plt

# Данные
X = np.array([(300, 200), (320, 180), (400, 100), (430, 65), (64, 150), (84, 112), (106, 90), (154, 64), (192, 62), (220, 82), (244, 92), (271, 111), (275, 137), (286, 161), (56, 178), (80, 156), (101, 131), (123, 104), (155, 94), (191, 100), (242, 70), (231, 114), (272, 95), (261, 131), (299, 136), (308, 124), (128, 78), (47, 128), (47, 159), (137, 186), (166, 228), (171, 250), (194, 272), (221, 287), (253, 292), (308, 293), (332, 280), (385, 256), (398, 237), (413, 205), (435, 166), (447, 137), (422, 126), (400, 154), (389, 183), (374, 214), (358, 235), (321, 250), (274, 263), (249, 263), (208, 230), (192, 204), (182, 174), (147, 205), (136, 246), (147, 255), (182, 282), (204, 298), (252, 316), (312, 321), (349, 313), (393, 288), (417, 259), (434, 222), (443, 187), (463, 174), (420, 90)])
Y = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])

# Обучение модели
clf_tree = DecisionTreeClassifier(criterion='gini', max_depth=4)
clf_tree.fit(X, Y)

# Предсказание и точность
predict = clf_tree.predict(X)
Q = np.mean(predict == Y)

print('accuracy:', Q)

# Построение графиков
fig, ax = plt.subplots(1, 2, figsize=(15, 6))

# График рассеяния
scatter = ax[0].scatter(X[:, 0], X[:, 1], c=Y, cmap='coolwarm')
ax[0].set_xlabel('Признак 1')
ax[0].set_ylabel('Признак 2')
ax[0].set_title('Классификация с использованием дерева решений')

# График дерева решений
tree.plot_tree(clf_tree, feature_names=['X1', 'X2'], filled=True, ax=ax[1])
ax[1].set_title('Дерево решений')

plt.tight_layout()
plt.savefig('task6_5_4.png')
plt.show()






